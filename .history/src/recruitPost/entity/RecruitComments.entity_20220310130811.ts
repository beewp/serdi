import {  Column,  CreateDateColumn,  Entity,  Index,  JoinColumn,  ManyToOne,  PrimaryGeneratedColumn,  UpdateDateColumn,} from 'typeorm';import { Users } from './../../user/entity/Users.entity';import { RecruitPosts } from './RecruitPosts.entity';@Index('userId', ['userId'], {})@Index('recruitPostId', ['recruitPostId'], {})@Entity('recruitComments')export class RecruitComments {  @PrimaryGeneratedColumn({    type: 'int',    name: 'recruitCommentId',    unsigned: true,  })  recruitCommentId: number;  @Column('int', { name: 'commentDepth', nullable: true, default: () => "'1'" })  commentDepth: number;  @Column('int', { name: 'commentGroup' })  commentGroup: number;  @Column('varchar', { name: 'userId', length: 255 })  userId: string;  @Column('int', { name: 'recruitPostId', unsigned: true })  recruitPostId: number;  @Column('varchar', { name: 'recruitCommentContent', length: 255 })  recruitCommentContent: string;  @CreateDateColumn({    name: 'createdAt',  })  createdAt: Date;  @UpdateDateColumn({    name: 'updatedAt',  })  updatedAt: Date;  @ManyToOne(() => Users, (users) => users.RecruitComment, {    onDelete: 'SET NULL',    onUpdate: 'CASCADE',  })  @JoinColumn([{ name: 'userId', referencedColumnName: 'userId' }])  User: Users;  @ManyToOne(    () => RecruitPosts,    (recruitPosts) => recruitPosts.RecruitComment,    { onDelete: 'SET NULL', onUpdate: 'CASCADE' },  )  @JoinColumn([    { name: 'recruitPostId', referencedColumnName: 'recruitPostId' },  ])  RecruitPost: RecruitPosts;}