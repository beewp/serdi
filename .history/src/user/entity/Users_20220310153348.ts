import { Column, Entity, OneToMany } from 'typeorm';import { Followers } from './Followers';import { InformationBookmarks } from 'src/informationPost/entity/InformationBookmarks';import { InformationComments } from 'src/informationPost/entity/InformationComments';import { InformationLikes } from 'src/informationPost/entity/InformationLikes';import { InformationPosts } from 'src/informationPost/entity/InformationPosts';import { Notification } from './Notification';import { RecruitApplies } from 'src/recruitPost/entity/RecruitApplies';import { RecruitBookmarks } from 'src/recruitPost/entity/RecruitBookmarks';import { RecruitComments } from 'src/recruitPost/entity/RecruitComments';import { RecruitPosts } from 'src/recruitPost/entity/RecruitPosts';import { UserReputation } from './UserReputation';@Entity('users', { schema: 'test' })export class Users {  @Column('varchar', { primary: true, name: 'userId', length: 100 })  userId: string;  @Column('varchar', { name: 'nickname', nullable: true, length: 100 })  nickname: string | null;  @Column('varchar', { name: 'profileImgUrl', nullable: true, length: 100 })  profileImgUrl: string | null;  @Column('varchar', { name: 'technologyStack', nullable: true, length: 100 })  technologyStack: string | null;  @Column('int', { name: 'activityPoint', nullable: true })  activityPoint: number | null;  @Column('varchar', { name: 'selfIntroduction', nullable: true, length: 100 })  selfIntroduction: string | null;  @Column('varchar', { name: 'portfolioUrl', nullable: true, length: 100 })  portfolioUrl: string | null;  @Column('varchar', { name: 'password', nullable: true, length: 100 })  password: string | null;  @Column('int', { name: 'loginType', nullable: true })  loginType: number | null;  @Column('varchar', { name: 'loginToken', nullable: true, length: 100 })  loginToken: string | null;  @Column('tinyint', { name: 'isValid', nullable: true, width: 1 })  isValid: boolean | null;  @Column('timestamp', {    name: 'createdAt',    nullable: true,    default: () => 'CURRENT_TIMESTAMP',  })  createdAt: Date | null;  @Column('timestamp', {    name: 'updatedAt',    nullable: true,    default: () => 'CURRENT_TIMESTAMP',  })  updatedAt: Date | null;  @OneToMany(() => Followers, (followers) => followers.follow2)  followers: Followers[];  @OneToMany(() => Followers, (followers) => followers.follower2)  followers2: Followers[];  @OneToMany(    () => InformationBookmarks,    (informationBookmarks) => informationBookmarks.user,  )  informationBookmarks: InformationBookmarks[];  @OneToMany(    () => InformationComments,    (informationComments) => informationComments.user,  )  informationComments: InformationComments[];  @OneToMany(    () => InformationLikes,    (informationLikes) => informationLikes.user,  )  informationLikes: InformationLikes[];  @OneToMany(    () => InformationPosts,    (informationPosts) => informationPosts.user,  )  informationPosts: InformationPosts[];  @OneToMany(    () => Notification,    (notification) => notification.notificationReceiver2,  )  notifications: Notification[];  @OneToMany(    () => Notification,    (notification) => notification.notificationSender2,  )  notifications2: Notification[];  @OneToMany(    () => RecruitApplies,    (recruitApplies) => recruitApplies.applicant2,  )  recruitApplies: RecruitApplies[];  @OneToMany(    () => RecruitBookmarks,    (recruitBookmarks) => recruitBookmarks.user,  )  recruitBookmarks: RecruitBookmarks[];  @OneToMany(() => RecruitComments, (recruitComments) => recruitComments.user)  recruitComments: RecruitComments[];  @OneToMany(() => RecruitPosts, (recruitPosts) => recruitPosts.user)  recruitPosts: RecruitPosts[];  @OneToMany(    () => UserReputation,    (userReputation) => userReputation.userReputationSender2,  )  userReputations: UserReputation[];  @OneToMany(    () => UserReputation,    (userReputation) => userReputation.userReputationReceiver2,  )  userReputations2: UserReputation[];}