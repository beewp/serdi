import {  Column,  Entity,  Index,  JoinColumn,  ManyToOne,  PrimaryGeneratedColumn,} from 'typeorm';import { InformationPosts } from './InformationPosts';import { Users } from './Users';@Index('informationPostId', ['informationPostId'], {})@Index('userId', ['userId'], {})@Entity('informationBookmarks', { schema: 'test' })export class InformationBookmarks {  @PrimaryGeneratedColumn({    type: 'int',    name: 'informationBookmarkId',    unsigned: true,  })  informationBookmarkId: number;  @Column('varchar', { name: 'userId', length: 100 })  userId: string;  @Column('int', { name: 'informationPostId', unsigned: true })  informationPostId: number;  @Column('timestamp', {    name: 'createdAt',    nullable: true,    default: () => 'CURRENT_TIMESTAMP',  })  createdAt: Date | null;  @ManyToOne(    () => InformationPosts,    (informationPosts) => informationPosts.informationBookmarks,    { onDelete: 'NO ACTION', onUpdate: 'NO ACTION' },  )  @JoinColumn([    { name: 'informationPostId', referencedColumnName: 'informationPostId' },  ])  informationPost: InformationPosts;  @ManyToOne(() => Users, (users) => users.informationBookmarks, {    onDelete: 'NO ACTION',    onUpdate: 'NO ACTION',  })  @JoinColumn([{ name: 'userId', referencedColumnName: 'userId' }])  user: Users;}